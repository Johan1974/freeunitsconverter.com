services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: freeunitsconverter_dev-frontend
    ports:
      - "8080:80"  
    volumes:
      - ./frontend:/usr/share/nginx/html:rw   # live editing
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    networks:
      - freeunitsconverter_dev
    environment:
      - SITE_URL_INT=${SITE_URL_INT}  # internal Docker URL   
      - SITE_URL_EXT=${SITE_URL_DEV}  # external URL used for SEO, canonical, CSS
 

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: freeunitsconverter_dev-backend
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - freeunitsconverter_dev

  seo_audit:
    build:
      context: ./seo_audit
      dockerfile: Dockerfile.dev
    container_name: freeunitsconverter_dev-seo_audit
    environment:
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_TO=${EMAIL_TO}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - GA_PROPERTY_ID=${GA_PROPERTY_ID}
      - GA_TAG_ID=${GA_TAG_ID}
      - PSI_API_KEY=${PSI_API_KEY}
      - SITE_URL_INT=${SITE_URL_INT}  # internal Docker URL   
      - SITE_URL_EXT=${SITE_URL_DEV}  # external URL used for SEO, canonical, CSS
      
    volumes:
      - ./frontend/static-pages:/usr/src/app/static-pages:ro
    restart: unless-stopped
    command:
      - bash
      - -c
      - |
        echo "⏳ Waiting for frontend to be ready...";
        until curl -sSf ${SITE_URL_INT} > /dev/null; do
          echo "Waiting for frontend...";
          sleep 2;
        done;
        echo "✅ Frontend ready, starting SEO audit...";
        node run_audit_dev.js
    networks:
      - freeunitsconverter_dev


networks:
  freeunitsconverter_dev:
    driver: bridge
