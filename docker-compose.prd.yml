

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prd
    container_name: freeunitsconverter_prd-frontend
    restart: unless-stopped
    networks:
      - freeunitsconverter_prd
    environment:
      - SITE_URL_INT=${SITE_URL_INT}   # internal container URL
      - SITE_URL_EXT=${SITE_URL_PRD}     # external URL used for SEO, canonical, CSS

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: freeunitsconverter_prd-backend
    restart: unless-stopped
    networks:
      - freeunitsconverter_prd

  nginx:
    image: fholzer/nginx-brotli:latest
    container_name: freeunitsconverter_prd-nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    restart: unless-stopped
    networks:
      - freeunitsconverter_prd

  nginx_http:
    image: fholzer/nginx-brotli:latest
    container_name: freeunitsconverter_prd-nginx_http
    volumes:
      - ./nginx/http_only.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
    command: ["nginx", "-g", "daemon off;"]
    restart: "no"
    networks:
      - freeunitsconverter_prd

  certbot:
    image: certbot/certbot
    container_name: freeunitsconverter_prd-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: "no"
    networks:
      - freeunitsconverter_prd

  seo_audit:
    build:
      context: ./seo_audit
      dockerfile: Dockerfile.prd
    container_name: freeunitsconverter_prd-seo_audit
    environment:
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_TO=${EMAIL_TO}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - GA_PROPERTY_ID=${GA_PROPERTY_ID}
      - GA_TAG_ID=${GA_TAG_ID}
      - PSI_API_KEY=${PSI_API_KEY}
      - SITE_URL_INT=http://frontend:80
      - SITE_URL_EXT=${SITE_URL_PRD}
    restart: unless-stopped
    command:
      - bash
      - -c
      - |
        echo "⏳ Waiting for frontend to be ready...";
        until curl -sSf ${SITE_URL_INT} > /dev/null; do
          echo "Waiting for frontend...";
          sleep 2;
        done;
        echo "✅ Frontend ready, starting SEO audit...";
        node run_audit_prd.js
    networks:
      - freeunitsconverter_prd



networks:
  freeunitsconverter_prd:
    driver: bridge
