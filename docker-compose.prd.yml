
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prd
    container_name: freeunitsconverter_prd-frontend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: freeunitsconverter_prd-backend
    restart: unless-stopped

  nginx:
    # image: nginx:latest
    image: fholzer/nginx-brotli:latest
    container_name: freeunitsconverter_prd-nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    restart: unless-stopped

  nginx_http:
    # image: nginx:latest
    image: fholzer/nginx-brotli:latest
    container_name: freeunitsconverter_prd-nginx_http
    volumes:
      - ./nginx/http_only.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
    command: ["nginx", "-g", "daemon off;"]
    restart: "no"

  certbot:
    image: certbot/certbot
    container_name: freeunitsconverter_prd-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    restart: "no"

  seo_audit:
    build:
      context: ./seo_audit
      dockerfile: Dockerfile
    container_name: freeunitsconverter_prd-seo_audit
    environment:   # make sure you set this in .env
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_TO=${EMAIL_TO}      
      - EMAIL_HOST=${EMAIL_HOST}  
      - EMAIL_PORT=${EMAIL_PORT} 
      - GA_PROPERTY_ID=${GA_PROPERTY_ID} 
      - GA_TAG_ID=${GA_TAG_ID}  
      - PSI_API_KEY=${PSI_API_KEY} 
    volumes:
      - ./frontend/static-pages:/usr/src/app/static-pages:ro
    restart: unless-stopped
    command: ["node", "run_audit.js"]




